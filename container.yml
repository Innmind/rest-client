arguments:
    transport: Innmind\HttpTransport\Transport
    urlResolver: Innmind\UrlResolver\ResolverInterface
    serializer: Symfony\Component\Serializer\Serializer
    cache: Innmind\Filesystem\Adapter
    types: '?set<string>'
    contentTypes: Innmind\Rest\Client\Formats ?? $formats.contentTypes

expose:
    client: $client.default

services:
    client:
        default Innmind\Rest\Client\Client\Client:
            - '$server.factory.retry'

    server:
        factory:
            retry Innmind\Rest\Client\Server\RetryServerFactory:
                - '$server.factory.default'

            default Innmind\Rest\Client\Server\ServerFactory:
                - '$transport'
                - '$urlResolver'
                - '$serializer'
                - '$translator.specification'
                - '$contentTypes'
                - '$server.capabilities.refreshLimited'

        capabilities:
            default Innmind\Rest\Client\Server\Capabilities\Factory\Factory:
                - '$transport'
                - '$urlResolver'
                - '$definition.factory'
                - '$contentTypes'

            cache Innmind\Rest\Client\Server\Capabilities\CacheFactory:
                - '$cache'
                - '$serializer'
                - '$server.capabilities.default'

            refreshLimited Innmind\Rest\Client\Server\Capabilities\RefreshLimitedFactory:
                - '$server.capabilities.cache'

    definition:
        factory Innmind\Rest\Client\Server\DefinitionFactory:
            - '$normalizer.definition'

        types Innmind\Rest\Client\Definition\Types:
            - '...$types'

    normalizer:
        capabilitiesNames Innmind\Rest\Client\Serializer\Normalizer\CapabilitiesNamesNormalizer: []
        definition Innmind\Rest\Client\Serializer\Normalizer\DefinitionNormalizer:
            - '$definition.types'
        identities Innmind\Rest\Client\Serializer\Normalizer\IdentitiesNormalizer:
            - $resolveIdentity
        identity Innmind\Rest\Client\Serializer\Normalizer\IdentityNormalizer:
            - $resolveIdentity
        resource Innmind\Rest\Client\Serializer\Normalizer\ResourceNormalizer: []

    resolveIdentity Innmind\Rest\Client\Visitor\ResolveIdentity:
        - $urlResolver

    translator:
        specification Innmind\Rest\Client\Translator\Specification\SpecificationTranslator: []

    formats:
        contentTypes Innmind\Rest\Client\Formats:
            - '$formats.map'

        map map<string, Innmind\Rest\Client\Format\Format>:
            - <json, $formats.json>

        json Innmind\Rest\Client\Format\Format:
            - 'json'
            - '$formats.json.mediaTypes'
            - 0

        json:
            mediaTypes set<Innmind\Rest\Client\Format\MediaType>:
                - '$formats.json.mediaType.application'

            mediaType:
                application Innmind\Rest\Client\Format\MediaType:
                    - 'application/json'
                    - 0
